; Auto-generated. Do not edit!


(cl:in-package sr_grasp_msgs-msg)


;//! \htmlinclude TriangulateResult.msg.html

(cl:defclass <TriangulateResult> (roslisp-msg-protocol:ros-message)
  ((pcl_mesh
    :reader pcl_mesh
    :initarg :pcl_mesh
    :type pcl_msgs-msg:PolygonMesh
    :initform (cl:make-instance 'pcl_msgs-msg:PolygonMesh))
   (shape_mesh
    :reader shape_mesh
    :initarg :shape_mesh
    :type shape_msgs-msg:Mesh
    :initform (cl:make-instance 'shape_msgs-msg:Mesh)))
)

(cl:defclass TriangulateResult (<TriangulateResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <TriangulateResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'TriangulateResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name sr_grasp_msgs-msg:<TriangulateResult> is deprecated: use sr_grasp_msgs-msg:TriangulateResult instead.")))

(cl:ensure-generic-function 'pcl_mesh-val :lambda-list '(m))
(cl:defmethod pcl_mesh-val ((m <TriangulateResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader sr_grasp_msgs-msg:pcl_mesh-val is deprecated.  Use sr_grasp_msgs-msg:pcl_mesh instead.")
  (pcl_mesh m))

(cl:ensure-generic-function 'shape_mesh-val :lambda-list '(m))
(cl:defmethod shape_mesh-val ((m <TriangulateResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader sr_grasp_msgs-msg:shape_mesh-val is deprecated.  Use sr_grasp_msgs-msg:shape_mesh instead.")
  (shape_mesh m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <TriangulateResult>) ostream)
  "Serializes a message object of type '<TriangulateResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'pcl_mesh) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'shape_mesh) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <TriangulateResult>) istream)
  "Deserializes a message object of type '<TriangulateResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'pcl_mesh) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'shape_mesh) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<TriangulateResult>)))
  "Returns string type for a message object of type '<TriangulateResult>"
  "sr_grasp_msgs/TriangulateResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'TriangulateResult)))
  "Returns string type for a message object of type 'TriangulateResult"
  "sr_grasp_msgs/TriangulateResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<TriangulateResult>)))
  "Returns md5sum for a message object of type '<TriangulateResult>"
  "6cf0a56fd440ea9799e5653068c14f63")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'TriangulateResult)))
  "Returns md5sum for a message object of type 'TriangulateResult"
  "6cf0a56fd440ea9799e5653068c14f63")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<TriangulateResult>)))
  "Returns full string definition for message of type '<TriangulateResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Result~%# Not defined in the documentation. Nice to have.~%pcl_msgs/PolygonMesh pcl_mesh~%# Officially defined in the documentation.~%shape_msgs/Mesh shape_mesh~%~%================================================================================~%MSG: pcl_msgs/PolygonMesh~%# Separate header for the polygonal surface~%Header header~%# Vertices of the mesh as a point cloud~%sensor_msgs/PointCloud2 cloud~%# List of polygons~%Vertices[] polygons~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: sensor_msgs/PointCloud2~%# This message holds a collection of N-dimensional points, which may~%# contain additional information such as normals, intensity, etc. The~%# point data is stored as a binary blob, its layout described by the~%# contents of the \"fields\" array.~%~%# The point cloud data may be organized 2d (image-like) or 1d~%# (unordered). Point clouds organized as 2d images may be produced by~%# camera depth sensors such as stereo or time-of-flight.~%~%# Time of sensor data acquisition, and the coordinate frame ID (for 3d~%# points).~%Header header~%~%# 2D structure of the point cloud. If the cloud is unordered, height is~%# 1 and width is the length of the point cloud.~%uint32 height~%uint32 width~%~%# Describes the channels and their layout in the binary data blob.~%PointField[] fields~%~%bool    is_bigendian # Is this data bigendian?~%uint32  point_step   # Length of a point in bytes~%uint32  row_step     # Length of a row in bytes~%uint8[] data         # Actual point data, size is (row_step*height)~%~%bool is_dense        # True if there are no invalid points~%~%================================================================================~%MSG: sensor_msgs/PointField~%# This message holds the description of one point entry in the~%# PointCloud2 message format.~%uint8 INT8    = 1~%uint8 UINT8   = 2~%uint8 INT16   = 3~%uint8 UINT16  = 4~%uint8 INT32   = 5~%uint8 UINT32  = 6~%uint8 FLOAT32 = 7~%uint8 FLOAT64 = 8~%~%string name      # Name of field~%uint32 offset    # Offset from start of point struct~%uint8  datatype  # Datatype enumeration, see above~%uint32 count     # How many elements in the field~%~%================================================================================~%MSG: pcl_msgs/Vertices~%# List of point indices~%uint32[] vertices~%~%================================================================================~%MSG: shape_msgs/Mesh~%# Definition of a mesh~%~%# list of triangles; the index values refer to positions in vertices[]~%MeshTriangle[] triangles~%~%# the actual vertices that make up the mesh~%geometry_msgs/Point[] vertices~%~%================================================================================~%MSG: shape_msgs/MeshTriangle~%# Definition of a triangle's vertices~%uint32[3] vertex_indices~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'TriangulateResult)))
  "Returns full string definition for message of type 'TriangulateResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Result~%# Not defined in the documentation. Nice to have.~%pcl_msgs/PolygonMesh pcl_mesh~%# Officially defined in the documentation.~%shape_msgs/Mesh shape_mesh~%~%================================================================================~%MSG: pcl_msgs/PolygonMesh~%# Separate header for the polygonal surface~%Header header~%# Vertices of the mesh as a point cloud~%sensor_msgs/PointCloud2 cloud~%# List of polygons~%Vertices[] polygons~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: sensor_msgs/PointCloud2~%# This message holds a collection of N-dimensional points, which may~%# contain additional information such as normals, intensity, etc. The~%# point data is stored as a binary blob, its layout described by the~%# contents of the \"fields\" array.~%~%# The point cloud data may be organized 2d (image-like) or 1d~%# (unordered). Point clouds organized as 2d images may be produced by~%# camera depth sensors such as stereo or time-of-flight.~%~%# Time of sensor data acquisition, and the coordinate frame ID (for 3d~%# points).~%Header header~%~%# 2D structure of the point cloud. If the cloud is unordered, height is~%# 1 and width is the length of the point cloud.~%uint32 height~%uint32 width~%~%# Describes the channels and their layout in the binary data blob.~%PointField[] fields~%~%bool    is_bigendian # Is this data bigendian?~%uint32  point_step   # Length of a point in bytes~%uint32  row_step     # Length of a row in bytes~%uint8[] data         # Actual point data, size is (row_step*height)~%~%bool is_dense        # True if there are no invalid points~%~%================================================================================~%MSG: sensor_msgs/PointField~%# This message holds the description of one point entry in the~%# PointCloud2 message format.~%uint8 INT8    = 1~%uint8 UINT8   = 2~%uint8 INT16   = 3~%uint8 UINT16  = 4~%uint8 INT32   = 5~%uint8 UINT32  = 6~%uint8 FLOAT32 = 7~%uint8 FLOAT64 = 8~%~%string name      # Name of field~%uint32 offset    # Offset from start of point struct~%uint8  datatype  # Datatype enumeration, see above~%uint32 count     # How many elements in the field~%~%================================================================================~%MSG: pcl_msgs/Vertices~%# List of point indices~%uint32[] vertices~%~%================================================================================~%MSG: shape_msgs/Mesh~%# Definition of a mesh~%~%# list of triangles; the index values refer to positions in vertices[]~%MeshTriangle[] triangles~%~%# the actual vertices that make up the mesh~%geometry_msgs/Point[] vertices~%~%================================================================================~%MSG: shape_msgs/MeshTriangle~%# Definition of a triangle's vertices~%uint32[3] vertex_indices~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <TriangulateResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'pcl_mesh))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'shape_mesh))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <TriangulateResult>))
  "Converts a ROS message object to a list"
  (cl:list 'TriangulateResult
    (cl:cons ':pcl_mesh (pcl_mesh msg))
    (cl:cons ':shape_mesh (shape_mesh msg))
))
